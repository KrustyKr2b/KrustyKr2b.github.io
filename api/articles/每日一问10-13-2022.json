{"title":"每日一问10/13/2022","uid":"cfe019c4b3b720ab570d0b0eea78733d","slug":"每日一问10-13-2022","date":"2022-10-13T12:41:31.000Z","updated":"2022-10-13T13:50:40.940Z","comments":true,"path":"api/articles/每日一问10-13-2022.json","keywords":null,"cover":null,"content":"<h3 id=\"Q1：Object-o-new-Object-在内存中占用多少个字节？\"><a href=\"#Q1：Object-o-new-Object-在内存中占用多少个字节？\" class=\"headerlink\" title=\"Q1：Object o = new Object()在内存中占用多少个字节？\"></a>Q1：<code>Object o = new Object()</code>在内存中占用多少个字节？</h3><p>答：</p>\n<p>一个对象在内存中的存储布局：<code>markword</code>：8字节，<strong>锁信息+HashCode+GC信息</strong>；<code>classPointer</code>:4字节；对齐：保证大小能<strong>被8整除</strong>；数据段：即对象内声明的变量</p>\n<p>所以一个空对象<strong>最小为16字节</strong></p>\n<h3 id=\"Q2：对象如何定位？\"><a href=\"#Q2：对象如何定位？\" class=\"headerlink\" title=\"Q2：对象如何定位？\"></a>Q2：对象如何定位？</h3><p>答：</p>\n<p><code>HotSpot</code>虚拟机默认使用直接定位：指针直接指向堆内存内的对象，对象内的<code>classPointer</code>指向方法区内的class。优点：直接访问快；缺点：GC时，若需要移动对象，则指针也需要改变</p>\n<p>句柄方式（间接方式）：指针指向另一个结构体，该结构体内有两个指针，分别指向堆内存和方法区。优点：对象小，GC时无需改动指针。缺点：比直接访问更慢</p>\n<h3 id=\"Q3：对象的创建过程\"><a href=\"#Q3：对象的创建过程\" class=\"headerlink\" title=\"Q3：对象的创建过程\"></a>Q3：对象的创建过程</h3><p>答：</p>\n<p>new指令：申请内存空间，为成员变量设立默认值</p>\n<p><code>invokespecial</code>汇编码：调用构造方法，为成员变量设定初始值</p>\n<p><code>astore</code>汇编码：建立引用，让指针指向堆</p>\n<h3 id=\"Q4：面向对象有哪些特征\"><a href=\"#Q4：面向对象有哪些特征\" class=\"headerlink\" title=\"Q4：面向对象有哪些特征\"></a>Q4：面向对象有哪些特征</h3><p>答：</p>\n<p>面向对象是一种编程思想，即万物皆可归类抽象，万物皆可对象；有三大特征</p>\n<ol>\n<li>封装：类与外界的封装关系，即隐藏类内部的实现机制，对外部而言，它的内部细节是隐藏的，只暴露了自身的访问方法。使用者按照既定的方式来调用方法，不必关心方法的内部实现，便于使用，增强了代码的可维护性。</li>\n<li>继承：类与类的关系，即从已有的类中派生出新的类，即子类与父类，也可以称作超类和基类。从多个类中抽象出一个基类，使其具备多个类的共同特性，使用extends关键字继承某个类后，就具备了父类的属性，并扩展新的属性。在父类中使用private关键字来限制不会被继承。</li>\n<li>多态：多个类的关系，必备的三个要素：继承，重写，父类引用指向子类对象</li>\n</ol>\n<h3 id=\"Q5：ArrayList与LinkedList的区别\"><a href=\"#Q5：ArrayList与LinkedList的区别\" class=\"headerlink\" title=\"Q5：ArrayList与LinkedList的区别\"></a>Q5：ArrayList与LinkedList的区别</h3><p>答：</p>\n<ol>\n<li>ArrayList是基于索引的数据接口，底层是数组，可以在常数级的复杂度对元素进行随机访问。而LinkedList是基于Node对象列表的形式存储数据，底层是一个双向链表，查找元素是O（n）。因此LinkedList的插入，添加，删除操作，总体上会更快，因为不是数组，不需要移动元素，重新计算索引和大小，但是LinkedList更占内存，因为每一个node都会封装前驱指针和后继指针。</li>\n<li>如果你需要经常随机访问数据，更加推荐使用ArrayList；如果需要经常插入删除元素，推荐使用LinkedList。</li>\n<li>多提一嘴：其实总体上ArrayList性能其实更加优越一些。第一，LinkedList的每一个node都有指针，更占内存，第二：虽然LinkedList的头插效率很高，但是尾插效率却不见得十分高效，因为数组的尾插无需进行拷贝和移位，而链表则需要创建node对象。并且有人测试过，在数据量较大时，链表的中间插入仍会比ArrayList耗时更多。所以俺还是无脑选择ArrayList~</li>\n</ol>\n","feature":true,"text":"Q1：Object o = new Object()在内存中占用多少个字节？答： 一个对象在内存中的存储布局：markword：8字节，锁信息+HashCode+GC信息；classPointer:4字节；对齐：保证大小能被8整除；数据段：即对象内声明的变量 所以一个空对象最小为...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"面试突击","slug":"面试突击","count":2,"path":"api/tags/面试突击.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q1%EF%BC%9AObject-o-new-Object-%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%8D%A0%E7%94%A8%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%AD%97%E8%8A%82%EF%BC%9F\"><span class=\"toc-text\">Q1：Object o &#x3D; new Object()在内存中占用多少个字节？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q2%EF%BC%9A%E5%AF%B9%E8%B1%A1%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%EF%BC%9F\"><span class=\"toc-text\">Q2：对象如何定位？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q3%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">Q3：对象的创建过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q4%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">Q4：面向对象有哪些特征</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q5%EF%BC%9AArrayList%E4%B8%8ELinkedList%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">Q5：ArrayList与LinkedList的区别</span></a></li></ol>","author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"每日一问10/14/2022","uid":"91683efeeb5b4f823eb3ffc7a800c9f1","slug":"每日一问10-14-2022","date":"2022-10-14T06:56:54.000Z","updated":"2022-10-14T14:06:11.102Z","comments":true,"path":"api/articles/每日一问10-14-2022.json","keywords":null,"cover":null,"text":"Q1：接口和抽象类有哪些区别答： 相同点： 不能被实例化 可以将抽象类和接口类型作为引用类型 一个类如果继承了某个抽象类或者实现了某个接口都需要对其中的抽象方法全部实现 不同点： 抽象类中可以定义构造器，可以有抽象方法和具体方法，抽象类中可以定义成员变量，一个类只能继承一个抽象类...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"面试突击","slug":"面试突击","count":2,"path":"api/tags/面试突击.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"周赛笔记10/9/2022","uid":"412f186990736c43d33166b6535da85e","slug":"周赛笔记10-9-2022","date":"2022-10-09T05:25:50.000Z","updated":"2022-10-13T05:40:02.677Z","comments":true,"path":"api/articles/周赛笔记10-9-2022.json","keywords":null,"cover":null,"text":"2432. 处理用时最长的那个任务的员工输入：n &#x3D; 10, logs &#x3D; [[0,3],[2,5],[0,9],[1,15]] 输出：1 解释： 任务 0 于时刻 0 开始，且在时刻 3 结束，共计 3 个单位时间。 任务 1 于时刻 3 开始，且在时刻 5...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":2,"path":"api/tags/LeetCode初见.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}