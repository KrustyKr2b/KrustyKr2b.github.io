{"title":"子序列数目","uid":"22f311f06a9cae50742dc4cb95ef15a1","slug":"子序列数目","date":"2022-10-14T14:28:37.000Z","updated":"2022-10-14T14:34:26.115Z","comments":true,"path":"api/articles/子序列数目.json","keywords":null,"cover":null,"content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;abc&quot;\n输出：7\n解释：7 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, 以及 &quot;abc&quot;。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>难度：hard</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//状态转移方程真的不好写，所以我不想用动态规划</span>\n    <span class=\"token comment\">//思路：以c结尾的子串数目等于：以c之前的所有字母结尾的子序列数目的总和+1</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">distinctSubseqII</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> alphaBet  <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">long</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//求总和</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">:</span>alphaBet<span class=\"token punctuation\">)</span>sum<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">1000000007</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//+1即加上自身</span>\n            alphaBet<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>sum<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">long</span> res <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> alphaBet<span class=\"token punctuation\">)</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>res<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">1000000007</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"输入：s &#x3D; &quot;abc&quot; 输出：7 解释：7 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;...","link":"","photos":[],"count_time":{"symbolsCount":762,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":4,"path":"api/tags/LeetCode初见.json"}],"toc":"","author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"周赛笔记10/16/2022","uid":"12f7852204c389ace8749b92fea05496","slug":"周赛笔记10-16-2022","date":"2022-10-16T08:06:31.000Z","updated":"2022-10-16T08:16:09.162Z","comments":true,"path":"api/articles/周赛笔记10-16-2022.json","keywords":null,"cover":null,"text":"6204. 与对应负数同时存在的最大正整数给你一个 不包含 任何零的整数数组 nums ，找出自身与对应的负数都在数组中存在的最大正整数 k 输入：nums &#x3D; [-1,2,-3,3] 输出：3 解释：3 是数组中唯一一个满足题目要求的 k 。 一个HashSet+一遍...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":4,"path":"api/tags/LeetCode初见.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"每日一问10/14/2022","uid":"91683efeeb5b4f823eb3ffc7a800c9f1","slug":"每日一问10-14-2022","date":"2022-10-14T06:56:54.000Z","updated":"2022-10-14T14:06:11.102Z","comments":true,"path":"api/articles/每日一问10-14-2022.json","keywords":null,"cover":null,"text":"Q1：接口和抽象类有哪些区别答： 相同点： 不能被实例化 可以将抽象类和接口类型作为引用类型 一个类如果继承了某个抽象类或者实现了某个接口都需要对其中的抽象方法全部实现 不同点： 抽象类中可以定义构造器，可以有抽象方法和具体方法，抽象类中可以定义成员变量，一个类只能继承一个抽象类...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"面试突击","slug":"面试突击","count":2,"path":"api/tags/面试突击.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>大三艰苦找实习的初阶技术人</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}