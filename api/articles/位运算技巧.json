{"title":"位运算技巧","uid":"bdd0b34d75b797c3e041acb9ccf9384c","slug":"位运算技巧","date":"2022-10-02T04:59:51.000Z","updated":"2022-10-13T13:40:14.411Z","comments":true,"path":"api/articles/位运算技巧.json","keywords":null,"cover":null,"content":"<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//位运算算法技巧</span>\n<span class=\"token comment\">//不用临时变量交换两个数</span>\na <span class=\"token operator\">^=</span> b<span class=\"token punctuation\">;</span>\nb <span class=\"token operator\">^=</span> a<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">^=</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//判断是否异号（同号）</span>\n<span class=\"token keyword\">boolean</span> f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//利用或操作 | 和空格将英文字符转换为小写</span>\n<span class=\"token punctuation\">(</span><span class=\"token char\">'A'</span> <span class=\"token operator\">|</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//利用与操作 &amp; 和下划线将英文字符转换为大写</span>\n<span class=\"token punctuation\">(</span><span class=\"token char\">'b'</span> <span class=\"token operator\">&amp;</span> <span class=\"token char\">'_'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//利用异或操作 ^ 和空格进行英文字符大小写互换</span>\n<span class=\"token punctuation\">(</span><span class=\"token char\">'D'</span> <span class=\"token operator\">^</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//去掉最后一位1</span>\nn <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//异或运算的特殊性质,异或运算满足交换律和结合律</span>\na <span class=\"token operator\">^</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">^</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//取反码+与运算</span>\nx <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nx <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token number\">0</span> <span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"//位运算算法技巧 //不用临时变量交换两个数 a ^= b; b ^= a; a ^= b; //判断是否异号（同号） boolean f = ((x ^ y) &lt; 0); //利用或操作 | 和空格将英文字符转换为小写 ('A' | ' ') = 'a'; //利用与操...","link":"","photos":[],"count_time":{"symbolsCount":346,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"算法归纳","slug":"算法归纳","count":2,"path":"api/tags/算法归纳.json"}],"toc":"","author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"周赛笔记10/9/2022","uid":"412f186990736c43d33166b6535da85e","slug":"周赛笔记10-9-2022","date":"2022-10-09T05:25:50.000Z","updated":"2022-10-13T05:40:02.677Z","comments":true,"path":"api/articles/周赛笔记10-9-2022.json","keywords":null,"cover":null,"text":"2432. 处理用时最长的那个任务的员工输入：n &#x3D; 10, logs &#x3D; [[0,3],[2,5],[0,9],[1,15]] 输出：1 解释： 任务 0 于时刻 0 开始，且在时刻 3 结束，共计 3 个单位时间。 任务 1 于时刻 3 开始，且在时刻 5...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":10,"path":"api/tags/LeetCode初见.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"划分k个相等子集","uid":"8a33ad4dd9e973b50a7c9fd8c1c572f8","slug":"划分k个相等子集","date":"2022-09-27T13:57:25.000Z","updated":"2022-10-13T14:07:20.667Z","comments":true,"path":"api/articles/划分k个相等子集.json","keywords":null,"cover":null,"text":"输入： nums &#x3D; [4, 3, 2, 3, 5, 2, 1], k &#x3D; 4 输出： True 说明： 有可能将其分成 4 个子集（5），（1,4），（2,3），（2,3）等于总和 桶问题：若可以划分为k个子集，则想象有k个桶，容量均为sum&#x2F;k，...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":10,"path":"api/tags/LeetCode初见.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}