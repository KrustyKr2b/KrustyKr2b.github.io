[{"title":"ants——Goroutine Pool阅读笔记","uid":"0f8b0ef7f344c55a62ab260849823535","slug":"ants——Goroutine-Pool阅读笔记","date":"2022-11-30T12:12:40.000Z","updated":"2022-12-01T07:21:34.182Z","comments":true,"path":"api/articles/ants——Goroutine-Pool阅读笔记.json","cover":null,"text":"虽然Go语言的Scheduler十分厉害，Goroutine也很轻量级，但是如果是某些极高并发请求的情况，比如百万级请求，调度和GC就会出现问题 如果实现一个类似线程池的协程池来实现资源复用，也许就能更高效地执行任务。 同步锁ants中使用的锁，是基于CAS机制和指数回避算法实现...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"源码学习笔记","slug":"源码学习笔记","count":1,"path":"api/tags/源码学习笔记.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"netty进阶","uid":"c4bbab825e6b5f8c309a31fde6de63ea","slug":"netty进阶","date":"2022-11-24T08:04:09.000Z","updated":"2022-11-24T08:04:45.671Z","comments":true,"path":"api/articles/netty进阶.json","cover":[],"text":"MpscQueueMpsc来自JCTools，即JAVA的高并发增强包，主要提供了一些 JDK 缺失的并发数据结构 Spsc 单生产者单消费者 Mpsc 多生产者单消费者 Spmc 单生产者多消费者 Mpmc 多生产者多消费者 Mpsc 的全称是 Multi Producer S...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"netty","slug":"netty","count":3,"path":"api/tags/netty.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"下一个更大元素","uid":"50b4378888e6118830afe84cb7b95b4c","slug":"下一个更大元素","date":"2022-11-24T05:39:19.000Z","updated":"2022-11-24T06:30:35.102Z","comments":true,"path":"api/articles/下一个更大元素.json","cover":[],"text":"556.下一个更大元素 III给你一个正整数 n ，请你找出符合条件的最小整数，其由重新排列 n 中存在的每位数字组成，并且其值大于 n 。如果不存在这样的正整数，则返回 -1 。 注意 ，返回的整数应当是一个 32 位整数 ，如果存在满足题意的答案，但不是 32 位整数 ，同样...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"LeetCode初见","slug":"LeetCode初见","count":10,"path":"api/tags/LeetCode初见.json"}],"author":{"name":"Samuel","slug":"blog-author","avatar":"/img/avatar.PNG","link":"/","description":"<b>燃烧烈爱,静默如谜</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]